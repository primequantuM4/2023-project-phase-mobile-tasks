// Mocks generated by Mockito 5.4.2 from annotations
// in todo/test/features/todo_list/data/repository/todo_list_repositroy_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo/core/platform/network_info.dart' as _i7;
import 'package:todo/features/todo_list/data/data_sources/todo_list_local_data_source.dart'
    as _i6;
import 'package:todo/features/todo_list/data/data_sources/todo_list_remote_data_source.dart'
    as _i3;
import 'package:todo/features/todo_list/data/models/tasks_model.dart' as _i2;
import 'package:todo/features/todo_list/domain/entity/tasks.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTasksModel_0 extends _i1.SmartFake implements _i2.TasksModel {
  _FakeTasksModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TodoListRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoListRemoteDataSource extends _i1.Mock
    implements _i3.TodoListRemoteDataSource {
  @override
  _i4.Future<_i2.TasksModel> createTask(_i5.Tasks? tasks) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTask,
          [tasks],
        ),
        returnValue: _i4.Future<_i2.TasksModel>.value(_FakeTasksModel_0(
          this,
          Invocation.method(
            #createTask,
            [tasks],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.TasksModel>.value(_FakeTasksModel_0(
          this,
          Invocation.method(
            #createTask,
            [tasks],
          ),
        )),
      ) as _i4.Future<_i2.TasksModel>);
  @override
  _i4.Future<List<_i2.TasksModel>> viewAllTasks() => (super.noSuchMethod(
        Invocation.method(
          #viewAllTasks,
          [],
        ),
        returnValue: _i4.Future<List<_i2.TasksModel>>.value(<_i2.TasksModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.TasksModel>>.value(<_i2.TasksModel>[]),
      ) as _i4.Future<List<_i2.TasksModel>>);
  @override
  _i4.Future<_i2.TasksModel> viewSpecificTask(String? taskId) =>
      (super.noSuchMethod(
        Invocation.method(
          #viewSpecificTask,
          [taskId],
        ),
        returnValue: _i4.Future<_i2.TasksModel>.value(_FakeTasksModel_0(
          this,
          Invocation.method(
            #viewSpecificTask,
            [taskId],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.TasksModel>.value(_FakeTasksModel_0(
          this,
          Invocation.method(
            #viewSpecificTask,
            [taskId],
          ),
        )),
      ) as _i4.Future<_i2.TasksModel>);
}

/// A class which mocks [TodoListLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoListLocalDataSource extends _i1.Mock
    implements _i6.TodoListLocalDataSource {
  @override
  _i4.Future<void> cacheCurrentTodoList(
          List<_i2.TasksModel>? todoListToCache) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheCurrentTodoList,
          [todoListToCache],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> cacheCurrentTask(_i2.TasksModel? task) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheCurrentTask,
          [task],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<List<_i2.TasksModel>> getAllTasks() => (super.noSuchMethod(
        Invocation.method(
          #getAllTasks,
          [],
        ),
        returnValue: _i4.Future<List<_i2.TasksModel>>.value(<_i2.TasksModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.TasksModel>>.value(<_i2.TasksModel>[]),
      ) as _i4.Future<List<_i2.TasksModel>>);
  @override
  _i4.Future<_i2.TasksModel> getSpecificTask(String? taskId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSpecificTask,
          [taskId],
        ),
        returnValue: _i4.Future<_i2.TasksModel>.value(_FakeTasksModel_0(
          this,
          Invocation.method(
            #getSpecificTask,
            [taskId],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.TasksModel>.value(_FakeTasksModel_0(
          this,
          Invocation.method(
            #getSpecificTask,
            [taskId],
          ),
        )),
      ) as _i4.Future<_i2.TasksModel>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
